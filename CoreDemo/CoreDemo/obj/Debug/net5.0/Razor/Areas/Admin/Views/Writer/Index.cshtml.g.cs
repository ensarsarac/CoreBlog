#pragma checksum "D:\Belgeler\CoreApp\CoreDemo\CoreDemo\Areas\Admin\Views\Writer\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "178f402892fdb8a405c1c0bed7e6b83e261da5db"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Writer_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/Writer/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Belgeler\CoreApp\CoreDemo\CoreDemo\Areas\Admin\Views\_ViewImports.cshtml"
using CoreDemo.Areas.Admin;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Belgeler\CoreApp\CoreDemo\CoreDemo\Areas\Admin\Views\_ViewImports.cshtml"
using CoreDemo.Areas.Admin.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"178f402892fdb8a405c1c0bed7e6b83e261da5db", @"/Areas/Admin/Views/Writer/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b881055197282d0a2ab51004156381e82f1e1fbc", @"/Areas/Admin/Views/_ViewImports.cshtml")]
    public class Areas_Admin_Views_Writer_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n\r\n");
#nullable restore
#line 3 "D:\Belgeler\CoreApp\CoreDemo\CoreDemo\Areas\Admin\Views\Writer\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/AdminLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h1>Yazar Ajax İşlemleri</h1>
<br />
<button type=""button"" id=""btngetlist"" class=""btn btn-outline-primary"">Yazar Listesi</button>
<button type=""button"" id=""btngetbyid"" class=""btn btn-outline-success"">Yazar Getir</button>
<button type=""button"" id=""btnremovewriter"" class=""btn btn-outline-danger"">Yazar Sil</button>
<button type=""button"" id=""btnupdatewriter"" class=""btn btn-outline-warning"">Yazar Güncelle</button>

<br />
<br />
<div id=""writerlist"">
    Buraya Yazarlar Gelicek.
</div>
<div id=""writerget"">
    Buraya 1 Yazar Gelicek.
</div>
<div>
    <input type=""text"" class=""form-control  mt-3"" id=""writerid"" placeholder=""Yazar Id Değerini Girin:"" />
</div>
<div id=""getbyidtable"">

</div>
<br />

<div>
    <input type=""text"" class=""form-control"" id=""txtremovewriterid"" class=""my-3"" placeholder=""Silinecek Yazar ID giriniz"" />
</div>
<br />

<div>
    <input type=""text"" class=""form-control"" id=""txtupdatewriterid"" placeholder=""Yazar Güncellenecek Id"" />
    <input type=""text"" class=""for");
            WriteLiteral("m-control\" id=\"txtupdatewritername\" placeholder=\"Yazar Yeni Adı\" />\r\n</div>\r\n\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        $('#btngetlist').click(function () {
            $.ajax({
                contentType: ""application/json"",
                dataType: ""json"",
                type: ""get"",
                url: ""/Admin/Writer/WriterList/"",
                success: function (func) {
                    let w = jQuery.parseJSON(func);
                    let tablehtml = ""<table class='table table-bordered'><tr><th>Yazar ID</th><th>Yazar Adı</th></tr>"";
                    $.each(w, (key, value) => {
                        tablehtml += `<tr><td>${value.Id}</td> <td>${value.NameSurname}</td></tr>`;
                    });
                    tablehtml += ""</table>"";

                    $('#writerlist').html(tablehtml);
                    console.log(w);
                }
            });
        });

        $('#btngetbyid').click(function () {
            let id = $('#writerid').val();
            $.ajax({
                contentType: ""application/json"",
                dataType: ""j");
                WriteLiteral(@"son"",
                type: ""get"",
                url: ""/Admin/Writer/GetWriterById/"",
                data: { writerid: id },
                success: function (func) {
                    console.log(func);
                    let w = jQuery.parseJSON(func);
                    let tablehtml = ""<table class='table table-bordered'><tr><th>Yazar ID</th><th>Yazar Adı</th></tr>"";

                    tablehtml += `<tr><td>${w.Id}</td> <td>${w.NameSurname}</td></tr>`;

                    tablehtml += ""</table>"";

                    $('#getbyidtable').html(tablehtml);

                }
            });
        });


        $('#btnremovewriter').click(function () {
            let getid = $('#txtremovewriterid').val();
            console.log(getid);

            $.ajax({
                contentType: ""application/json"",
                dataType: ""json"",
                type: ""get"",
                url: ""/Admin/Writer/RemoveWriter"",
                data: { writerid: getid },
      ");
                WriteLiteral(@"          success: function (func) {
                    console.log(func);
                    alert(""Yazar silme başarılı bir şekilde gerçekleşti."")

                }
            });
        });

        $('#btnupdatewriter').click(function () {

            let getid = $('#txtupdatewriterid').val();
            let newname = $('#txtupdatewritername').val();
            let writer = {
                Id: getid,
                Name: newname
            }
            $.ajax({
                type: ""post"",
                url: ""/Admin/Writer/UpdateWriter/"",
                data: writer,
                success: function (func) {
                    alert(""Kayıt Güncelleme işlemi başarıyla gerçekleşti."")
                }
            });

        });

    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
